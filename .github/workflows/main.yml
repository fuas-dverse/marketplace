name: Run Frontend Tests for Marketplace Frontend

on:
  push:
    branches:
      - main

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  setup:
    name: Set Up Environment
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up Docker
        run: docker --version

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.17.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

  fastapi-backend-tests:
    uses: ./.github/workflows/backend-test-template.yml
    with:
      working_directory: fastapi_app
      python_version: "3.10"
      api_check_url: "http://localhost:5001"

  notification-service-tests:
    uses: ./.github/workflows/backend-test-template.yml
    with:
      working_directory: notification_service
      python_version: "3.10"
      api_check_url: "http://localhost:5003"

  marketplace-frontend-tests:
    uses: ./.github/workflows/frontend-test-template.yml
    with:
      working_directory: marketplace-frontend
      node_version: "22"

  auth-frontend-tests:
    uses: ./.github/workflows/frontend-test-template.yml
    with:
      working_directory: auth-frontend
      node_version: "22"

  upload-coverage:
    name: Upload Coverage Reports
    runs-on: ubuntu-latest
    needs:
      [
        marketplace-frontend-tests,
        auth-frontend-tests,
        fastapi-backend-tests,
        notification-service-tests,
      ]

    strategy:
      matrix:
        coverage:
          - {
              file: "./marketplace-frontend/coverage/jest/marketplace-frontend-lcov.info",
              artifact: "frontend-coverage",
              type: "Jest",
            }
          - {
              file: "./auth-frontend/coverage/jest/auth-frontend-lcov.info",
              artifact: "frontend-coverage",
              type: "Jest",
            }
          - {
              file: "./fastapi_app-coverage.xml",
              artifact: "python-coverage-fastapi_app",
              type: "Python",
            }
          - {
              file: "./notification_service-coverage.xml",
              artifact: "python-coverage-notification_service",
              type: "Python",
            }

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Coverage Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.coverage.artifact }}

      - name: Fix Permissions for Coverage File
        run: |
          chmod 644 ${{ matrix.coverage.file }}
          ls -l ${{ matrix.coverage.file }}

      - name: Debug Coverage File
        run: |
          echo "Debugging Coverage File (${matrix.coverage.type}):"
          cat ${{ matrix.coverage.file }}

      - name: Upload Coverage to Codacy
        uses: codacy/codacy-coverage-reporter-action@master
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: ${{ matrix.coverage.file }}

  push-docker-image-marketplace-api:
    uses: ./.github/workflows/docker-build-push-template.yml
    with:
      needs: fastapi-backend-tests
      context: ./fastapi_app
      dockerfile: ./fastapi_app/Dockerfile
      image_name: dverse/marketplace-api
      platforms: linux/amd64,linux/arm64

  push-docker-image-notification-service:
    uses: ./.github/workflows/docker-build-push-template.yml
    with:
      needs: notification-service-tests
      context: ./notification_service
      dockerfile: ./notification_service/Dockerfile
      image_name: dverse/notification-service
      platforms: linux/amd64,linux/arm64

  push-docker-image-marketplace-frontend:
    uses: ./.github/workflows/docker-build-push-template.yml
    with:
      needs: marketplace-frontend-tests
      context: ./marketplace-frontend
      dockerfile: ./marketplace-frontend/Dockerfile
      image_name: dverse/marketplace-frontend
      platforms: linux/amd64,linux/arm64

  push-docker-image-auth-frontend:
    uses: ./.github/workflows/docker-build-push-template.yml
    with:
      needs: auth-frontend-tests
      context: ./auth-frontend
      dockerfile: ./auth-frontend/Dockerfile
      image_name: dverse/auth-frontend
      platforms: linux/amd64,linux/arm64

  deploy:
    uses: ./.github/workflows/deploy-template.yml
    with:
      deploy_script: |
        echo "Starting deployment..."
        echo "Deploying services to production environment..."
        echo "Deployment complete!"
