services:
  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - nats_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U marketplace -d marketplace_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  api:
    build:
      context: ./fastapi_app
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: ${DATABASE_URL}
      NATS_SERVER_URL: ${NATS_SERVER_URL}
    ports:
      - "5001:5001"
    depends_on:
      db:
        condition: service_healthy
    restart: on-failure
    networks:
      - nats_network

  nats:
    image: nats:latest
    ports:
      - "4222:4222"
    networks:
      - nats_network

  nats_client:
    build:
      context: ./nats_app
      dockerfile: Dockerfile
    environment:
      NATS_SERVER_URL: ${NATS_SERVER_URL}
    ports:
      - "5003:5003"
    restart: on-failure
    depends_on:
      - nats
    networks:
      - nats_network

  notification-service:
    build:
      context: ./notification_service
      dockerfile: Dockerfile
    environment:
      NATS_SERVER_URL: ${NATS_SERVER_URL}
      NOTIFICATION_TYPE: in_app
    depends_on:
      - nats
    networks:
      - nats_network

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus_data/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"

  # auth-frontend:
  #   build:
  #     context: ./auth-frontend
  #     dockerfile: Dockerfile
  #   ports:
  #     - "3002:3002"
  #   environment:
  #     PORT: 3002
  #     AUTH_BACKEND_URL: http://localhost:8080/api/v1/auth
  #     API_URL: http://localhost:8080/api/v1
  #   networks:
  #     - nats_network

  # frontend:
  #   build:
  #     context: ./marketplace-frontend
  #     dockerfile: Dockerfile
  #   ports:
  #     - "3001:3001"
  #   environment:
  #     PORT: 3001
  #     NODE_ENV: production
  #     NATS_SERVER_URL: nats://nats:4222
  #     FAST_API_URL: http://api:5001
  #   networks:
  #     - nats_network

networks:
  nats_network:
    driver: bridge

volumes:
  prometheus_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./prometheus_data
  # grafana_data:
  #   driver: local
  #   driver_opts:
  #     o: bind
  #     type: none
  #     device: ./grafana_data
  pgdata:
