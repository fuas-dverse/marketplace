name: CI/CD Workflow

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  setup:
    name: Set Up Environment
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Docker
        run: docker --version

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.17.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

  frontend-tests:
    name: Run Frontend Tests
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      checks: write
    needs: setup

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install Dependencies
        working-directory: marketplace-frontend
        run: npm install

      - name: Run Frontend Tests with Coverage
        working-directory: marketplace-frontend
        run: npm test -- --coverage

      - name: List Coverage Directory
        run: ls -la marketplace-frontend/coverage/jest

      - name: Publish Jest Coverage Report
        uses: ArtiomTr/jest-coverage-report-action@v2
        with:
          working-directory: marketplace-frontend
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  backend-tests:
    name: Run Backend Tests
    runs-on: ubuntu-latest
    needs: setup
    services:
      db:
        image: postgres:latest
        env:
          POSTGRES_USER: marketplace
          POSTGRES_PASSWORD: marketplace
          POSTGRES_DB: marketplace_db
        options: >-
          --health-cmd="pg_isready -U marketplace -d marketplace_db"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r fastapi_app/requirements.txt

      - name: Build and Start Services
        run: |
          docker-compose up --build -d
          docker-compose ps

      - name: Run Backend Tests
        run: |
          pytest fastapi_app/tests/ --maxfail=5 --disable-warnings -v

      - name: Tear Down Services
        run: docker-compose down

  upload-coverage:
    name: Upload Coverage Reports
    runs-on: ubuntu-latest
    needs: [frontend-tests, backend-tests]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Upload Coverage to Codacy
        uses: codacy/codacy-coverage-reporter-action@master
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: marketplace-frontend/coverage/jest/lcov.info

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [frontend-tests, backend-tests]
    if: github.ref_name == 'main'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Deploy Application
        run: |
          echo "Fake deploying the application..."
