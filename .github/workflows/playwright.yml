name: Playwright End2End Tests Template

on:
  workflow_call:
    inputs:
      working_directory:
        description: "The directory of the backend project"
        required: true
        type: string
      port:
        description: "Port where the frontend is running"
        required: true
        type: string
    secrets:
      DATABASE_URL:
        description: "Database URL"
        required: true
      NATS_SERVER_URL:
        description: "NATS server URL"
        required: true
      POSTGRES_USER:
        description: "Postgres user"
        required: true
      POSTGRES_PASSWORD:
        description: "Postgres password"
        required: true
      POSTGRES_DB:
        description: "Postgres database"
        required: true

jobs:
  e2e-tests:
    name: Run End to End Tests
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up Node
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.17.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Build and Start Services
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          NATS_SERVER_URL: ${{ secrets.NATS_SERVER_URL }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        run: |
          docker-compose build --no-cache
          docker-compose up -d
          docker-compose ps

      - name: Install dependencies
        working-directory: ${{ inputs.working_directory }}
        run: npm ci

      - name: Build Frontend
        working-directory: ${{ inputs.working_directory }}
        run: npm run build

      - name: Start Frontend
        working-directory: ${{ inputs.working_directory }}
        run: npm run start &

      - name: Wait for Frontend to Start
        working-directory: ${{ inputs.working_directory }}
        run: npx wait-on http://localhost:${{ inputs.port }}

      - name: Install Playwright Browsers
        working-directory: ${{ inputs.working_directory }}
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        working-directory: ${{ inputs.working_directory }}
        run: npx playwright test

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: ${{ inputs.working_directory }}/playwright-report/
          retention-days: 30

      - name: Tear Down Services
        if: always()
        run: docker-compose down
